version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build_products: # runs not using Workflows must have a `build` job as entry point

    docker: # run the steps with Docker
      #- image: circleci/golang:1.8
      - image: codeaches/openjdk:12-jdk # ...with this image as the primary container; this is where all `steps` will run

    working_directory: ~/compiler # directory where steps will run

    steps: # a collection of executable commands

      #- run: go get github.com/aktau/github-release
      - checkout # check out source code to working directory
      # - setup_remote_docker:   # (2)
      #     docker_layer_caching: true # (3)

      # - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
      #     key: compiler

      - run: mvn clean package -Pexecutable # run the actual tests
      - save_cache:
          key: built_package
          paths:
            - ~/compiler/target
      # - save_cache: # saves the project dependencies
      #     paths:
      #       - ~/.m2
      #     key: compiler

      # - persist_to_workspace: 
      #     root: /tmp/workspace
      #     paths:
      #       - compiler/target/

  deploy_release: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      - image: circleci/golang:1.11.1

    working_directory: ~/compiler # directory where steps will run

    steps: # a collection of executable commands
      - restore_cache:
          keys:
            - built_package
      # - attach_workspace:
      #     at: /tmp/workspace
      - run: go get github.com/aktau/github-release
      - run: ls; cd target; ls; export ARTIFACT=`ls *.jar`; github-release upload --replace --user $CIRCLE_PROJECT_USERNAME --repo $CIRCLE_PROJECT_REPONAME --tag CircleCIRelease --file "$ARTIFACT" --name $ARTIFACT 

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - deploy_release:
          requires:
            - build_products
      - build_products
